//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "Z:\home\aaron\Files\Minecraft Stuff\Mods\Mod Code Stuff\mcp811\conf"!

//Decompiled by Procyon!

package biomesoplenty.api;

import com.google.common.base.*;
import net.minecraft.block.*;
import java.util.*;

public class Blocks
{
    public static Optional<? extends Block> ash;
    public static Optional<? extends Block> ashStone;
    public static Optional<? extends Block> cragRock;
    public static Optional<? extends Block> driedDirt;
    public static Optional<? extends Block> hardDirt;
    public static Optional<? extends Block> hardIce;
    public static Optional<? extends Block> hardSand;
    public static Optional<? extends Block> holyGrass;
    public static Optional<? extends Block> holyDirt;
    public static Optional<? extends Block> holyStone;
    public static Optional<? extends Block> mud;
    public static Optional<? extends Block> originGrass;
    public static Optional<? extends Block> longGrass;
    public static Optional<? extends Block> redRock;
    public static Optional<? extends Block> crystal;
    public static Optional<? extends Block> planks;
    public static Optional<? extends Block> logs1;
    public static Optional<? extends Block> logs2;
    public static Optional<? extends Block> logs3;
    public static Optional<? extends Block> logs4;
    public static Optional<? extends Block> acaciaStairs;
    public static Optional<? extends Block> cherryStairs;
    public static Optional<? extends Block> darkStairs;
    public static Optional<? extends Block> firStairs;
    public static Optional<? extends Block> holyStairs;
    public static Optional<? extends Block> magicStairs;
    public static Optional<? extends Block> mangroveStairs;
    public static Optional<? extends Block> palmStairs;
    public static Optional<? extends Block> redwoodStairs;
    public static Optional<? extends Block> willowStairs;
    public static Optional<? extends Block> redCobbleStairs;
    public static Optional<? extends Block> redBricksStairs;
    public static Optional<? extends Block> mudBricksStairs;
    public static Optional<? extends Block> holyCobbleStairs;
    public static Optional<? extends Block> holyBricksStairs;
    public static Optional<? extends Block> pineStairs;
    public static Optional<? extends Block> hellBarkStairs;
    public static Optional<? extends Block> jacarandaStairs;
    public static Optional<? extends BlockHalfSlab> woodenSingleSlab1;
    public static Optional<? extends BlockHalfSlab> woodenDoubleSlab1;
    public static Optional<? extends BlockHalfSlab> woodenSingleSlab2;
    public static Optional<? extends BlockHalfSlab> woodenDoubleSlab2;
    public static Optional<? extends BlockHalfSlab> stoneSingleSlab;
    public static Optional<? extends BlockHalfSlab> stoneDoubleSlab;
    public static Optional<? extends Block> flowers;
    public static Optional<? extends Block> flowers2;
    public static Optional<? extends Block> mushrooms;
    public static Optional<? extends Block> coral;
    public static Optional<? extends Block> leaves1;
    public static Optional<? extends Block> leaves2;
    public static Optional<? extends Block> leavesColorized;
    public static Optional<? extends Block> leavesFruit;
    public static Optional<? extends Block> leavesFruit2;
    public static Optional<? extends Block> foliage;
    public static Optional<? extends Block> plants;
    public static Optional<? extends Block> flatPlants;
    public static Optional<? extends Block> saplings;
    public static Optional<? extends Block> colorizedSaplings;
    public static Optional<? extends Block> willow;
    public static Optional<? extends Block> ivy;
    public static Optional<? extends Block> treeMoss;
    public static Optional<? extends Block> moss;
    public static Optional<? extends Block> petals;
    public static Optional<? extends Block> bamboo;
    public static Optional<? extends Block> cloud;
    public static Optional<? extends Block> bones;
    public static Optional<? extends Block> amethystOre;
    public static Optional<? extends Block> mudBrick;
    public static Optional<? extends Block> promisedPortal;
    public static Optional<? extends Block> glass;
    public static Optional<? extends Block> altar;
    public static Optional<? extends Block> puddle;
    public static Optional<? extends Block> grave;
    public static Map shearBlockIds;
    
    static {
        Blocks.ash = (Optional<? extends Block>)Optional.absent();
        Blocks.ashStone = (Optional<? extends Block>)Optional.absent();
        Blocks.cragRock = (Optional<? extends Block>)Optional.absent();
        Blocks.driedDirt = (Optional<? extends Block>)Optional.absent();
        Blocks.hardDirt = (Optional<? extends Block>)Optional.absent();
        Blocks.hardIce = (Optional<? extends Block>)Optional.absent();
        Blocks.hardSand = (Optional<? extends Block>)Optional.absent();
        Blocks.holyGrass = (Optional<? extends Block>)Optional.absent();
        Blocks.holyDirt = (Optional<? extends Block>)Optional.absent();
        Blocks.holyStone = (Optional<? extends Block>)Optional.absent();
        Blocks.mud = (Optional<? extends Block>)Optional.absent();
        Blocks.originGrass = (Optional<? extends Block>)Optional.absent();
        Blocks.longGrass = (Optional<? extends Block>)Optional.absent();
        Blocks.redRock = (Optional<? extends Block>)Optional.absent();
        Blocks.crystal = (Optional<? extends Block>)Optional.absent();
        Blocks.planks = (Optional<? extends Block>)Optional.absent();
        Blocks.logs1 = (Optional<? extends Block>)Optional.absent();
        Blocks.logs2 = (Optional<? extends Block>)Optional.absent();
        Blocks.logs3 = (Optional<? extends Block>)Optional.absent();
        Blocks.logs4 = (Optional<? extends Block>)Optional.absent();
        Blocks.acaciaStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.cherryStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.darkStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.firStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.holyStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.magicStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.mangroveStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.palmStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.redwoodStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.willowStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.redCobbleStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.redBricksStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.mudBricksStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.holyCobbleStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.holyBricksStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.pineStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.hellBarkStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.jacarandaStairs = (Optional<? extends Block>)Optional.absent();
        Blocks.woodenSingleSlab1 = (Optional<? extends BlockHalfSlab>)Optional.absent();
        Blocks.woodenDoubleSlab1 = (Optional<? extends BlockHalfSlab>)Optional.absent();
        Blocks.woodenSingleSlab2 = (Optional<? extends BlockHalfSlab>)Optional.absent();
        Blocks.woodenDoubleSlab2 = (Optional<? extends BlockHalfSlab>)Optional.absent();
        Blocks.stoneSingleSlab = (Optional<? extends BlockHalfSlab>)Optional.absent();
        Blocks.stoneDoubleSlab = (Optional<? extends BlockHalfSlab>)Optional.absent();
        Blocks.flowers = (Optional<? extends Block>)Optional.absent();
        Blocks.flowers2 = (Optional<? extends Block>)Optional.absent();
        Blocks.mushrooms = (Optional<? extends Block>)Optional.absent();
        Blocks.coral = (Optional<? extends Block>)Optional.absent();
        Blocks.leaves1 = (Optional<? extends Block>)Optional.absent();
        Blocks.leaves2 = (Optional<? extends Block>)Optional.absent();
        Blocks.leavesColorized = (Optional<? extends Block>)Optional.absent();
        Blocks.leavesFruit = (Optional<? extends Block>)Optional.absent();
        Blocks.leavesFruit2 = (Optional<? extends Block>)Optional.absent();
        Blocks.foliage = (Optional<? extends Block>)Optional.absent();
        Blocks.plants = (Optional<? extends Block>)Optional.absent();
        Blocks.flatPlants = (Optional<? extends Block>)Optional.absent();
        Blocks.saplings = (Optional<? extends Block>)Optional.absent();
        Blocks.colorizedSaplings = (Optional<? extends Block>)Optional.absent();
        Blocks.willow = (Optional<? extends Block>)Optional.absent();
        Blocks.ivy = (Optional<? extends Block>)Optional.absent();
        Blocks.treeMoss = (Optional<? extends Block>)Optional.absent();
        Blocks.moss = (Optional<? extends Block>)Optional.absent();
        Blocks.petals = (Optional<? extends Block>)Optional.absent();
        Blocks.bamboo = (Optional<? extends Block>)Optional.absent();
        Blocks.cloud = (Optional<? extends Block>)Optional.absent();
        Blocks.bones = (Optional<? extends Block>)Optional.absent();
        Blocks.amethystOre = (Optional<? extends Block>)Optional.absent();
        Blocks.mudBrick = (Optional<? extends Block>)Optional.absent();
        Blocks.promisedPortal = (Optional<? extends Block>)Optional.absent();
        Blocks.glass = (Optional<? extends Block>)Optional.absent();
        Blocks.altar = (Optional<? extends Block>)Optional.absent();
        Blocks.puddle = (Optional<? extends Block>)Optional.absent();
        Blocks.grave = (Optional<? extends Block>)Optional.absent();
        Blocks.shearBlockIds = new HashMap();
    }
}
